Create a user account:
- new user account using username (OK), email and password (OK).
- to include email there are several resources:
    https://version.aalto.fi/gitlab/kaistio1/wsd-project/commit/4b09c97f83ae41c235089cd5f3732890dca6b133
    https://gist.github.com/schwuk/2725286
    https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#manager-methods
    https://overiq.com/django-1-10/django-creating-users-using-usercreationform/
    https://stackoverflow.com/questions/10372877/how-to-create-a-user-in-django


Custom Forms:
    https://overiq.com/django-1-10/django-creating-users-using-usercreationform/


Sending emails:
    Technical Requirements for Sending emails:​ console backend must be used for sending emails:
        https://docs.djangoproject.com/en/2.2/topics/email/#console-backend
    https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#methods
    more specifically the method email_user():
    https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#django.contrib.auth.models.User.email_user


Multiple Languages
    Tutorial: https://djangowaves.com/tutorial/multiple-languages-in-Django/
    And follow up: https://docs.djangoproject.com/en/2.2/topics/i18n/translation/#how-django-discovers-language-preference
    Good explanation: https://stackoverflow.com/questions/10280881/django-site-with-2-languages#26520044
    Django docs: https://docs.djangoproject.com/en/2.2/topics/i18n/


Confirm account creation with email (extra):
    https://overiq.com/django-1-10/django-extending-user-model/


Additional User Information:
Extending the existing User model:
    https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#extending-the-existing-user-model


Custom User model (with unique email):
    Django docs: If you’re starting a new project, it’s highly recommended to set up a custom user model, even if the
    default User model is sufficient for you. This model behaves identically to the default user model, but you’ll be
    able to customize it in the future if the need arises.
    https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#using-a-custom-user-model-when-starting-a-project


Failing migrations:
    https://stackoverflow.com/questions/44651760/django-db-migrations-exceptions-inconsistentmigrationhistory#48476148

    Solution in my case:
    1. go the nuclear route, i.e. delete database and the migrations files
    2. run makemigrations
    3. run migrate


Username already take Error Message:
    user.views.SignUp() uncomment the message in post-method in else-statement.


Forms cleaned_data
    What it is? Answer: https://docs.djangoproject.com/en/dev/ref/forms/api/#django.forms.Form.cleaned_data


Edit user:
    with ModelForm: https://docs.djangoproject.com/en/2.2/topics/forms/modelforms/#the-save-method
    "A subclass of ModelForm can accept an existing model instance (the user) as the keyword argument instance; if this
    is supplied, save() will update that instance."


Signin not working:
    Could it be that since signin does not use a form but instead just a signin.html the data cannot be posted anywhere?

OneToOne field in model rather than ForeignKey:
    https://stackoverflow.com/questions/5870537/whats-the-difference-between-django-onetoonefield-and-foreignkey
    https://docs.djangoproject.com/en/dev/ref/models/fields/#module-django.db.models.fields.related
    https://docs.djangoproject.com/en/dev/topics/db/examples/one_to_one/

    ForeignKey: many-to-one relation
    One manufactuerer can have many cars (or one auction can have many bids, one user can have many bids, one user can have many auctions)

        class Car(models.Model):
            manufacturer = models.ForeignKey('Manufacturer')
            # ...
        class Manufacturer(models.Model):
            # ...

    Many-to-Many:
        https://docs.djangoproject.com/en/dev/topics/db/examples/many_to_many/

    One-to-One:
        https://docs.djangoproject.com/en/dev/topics/db/examples/one_to_one/


DB Queries:
    https://docs.djangoproject.com/en/2.2/topics/db/queries/
